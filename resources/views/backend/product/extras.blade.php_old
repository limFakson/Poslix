@extends('backend.layout.main') @section('content')
    @if ($errors->has('name'))
        <div class="alert alert-danger alert-dismissible text-center"><button type="button" class="close" data-dismiss="alert"
                aria-label="Close"><span aria-hidden="true">&times;</span></button>{{ $errors->first('name') }}</div>
    @endif
    @if ($errors->has('image'))
        <div class="alert alert-danger alert-dismissible text-center"><button type="button" class="close" data-dismiss="alert"
                aria-label="Close"><span aria-hidden="true">&times;</span></button>{{ $errors->first('image') }}</div>
    @endif
    @if (session()->has('message'))
        <div class="alert alert-success alert-dismissible text-center"><button type="button" class="close"
                data-dismiss="alert" aria-label="Close"><span
                    aria-hidden="true">&times;</span></button>{{ session()->get('message') }}</div>
    @endif
    @if (session()->has('not_permitted'))
        <div class="alert alert-danger alert-dismissible text-center"><button type="button" class="close"
                data-dismiss="alert" aria-label="Close"><span
                    aria-hidden="true">&times;</span></button>{{ session()->get('not_permitted') }}</div>
    @endif
    <section>
        <div class="container-fluid">
            <!-- Trigger the modal with a button -->
            @if (in_array('products-add', $all_permission))
                <a href="{{ route('extra') }}" class="btn btn-info add-product-btn"><i class="dripicons-plus"></i>
                    Add Extra</a>
            @endif
        </div>
        <div class="table-responsive">
            <table id="category-table" class="table" style="width: 100%">
                <thead>
                    <tr>
                        <th class="not-exported"></th>
                        <th>{{ trans('file.name') }}</th>

                        <th class="not-exported">{{ trans('file.action') }}</th>
                    </tr>
                </thead>
            </table>
        </div>
    </section>

   
@endsection
@push('scripts')


    <script type="text/javascript">
        $("ul#product").siblings('a').attr('aria-expanded', 'true');
        $("ul#product").addClass("show");
        $("ul#product #category-menu").addClass("active");

        function confirmDelete() {
            if (confirm(
                    "If you delete category all products under this category will also be deleted. Are you sure want to delete?"
                )) {
                return true;
            }
            return false;
        }

        var category_id = [];
        var user_verified = <?php echo json_encode(env('USER_VERIFIED')); ?>;

        $.ajaxSetup({
            headers: {
                'X-CSRF-TOKEN': $('meta[name="csrf-token"]').attr('content')
            }
        });
        // $(document).on("click", ".open-EditCategoryDialog", function() {
        //     $("#editModal input[name='is_sync_disable']").prop("checked", false);
        //     $("#editModal input[name='featured']").prop("checked", false);
        //     var url = "category/";
        //     var id = $(this).data('id').toString();
        //     url = url.concat(id).concat("/edit");
        //     $.get(url, function(data) {
        //         $("#editModal input[name='name']").val(data['name']);
        //         $("#editModal select[name='parent_id']").val(data['parent_id']);
        //         $("#editModal input[name='category_id']").val(data['id']);
        //         if (data['is_sync_disable']) {
        //             $("#editModal input[name='is_sync_disable']").prop("checked", true);
        //         }
        //         if (data['featured']) {
        //             $("#editModal input[name='featured']").prop("checked", true);
        //         }
        //         $("#editModal input[name='page_title']").val(data['page_title']);
        //         $("#editModal input[name='short_description']").val(data['short_description']);
        //         $('.selectpicker').selectpicker('refresh');
        //     });
        // });

        $(document).ready(function() {
           datatabletable();
           debugger
           function datatabletable(){
$('#category-table').DataTable({
  
        "processing": true,
        "serverSide": true,
       
        "ajax": {
            url: "extra/extra-data",
            dataType: "json",
            type: "post"
        },
        "createdRow": function(row, data, dataIndex) {
            $(row).attr('data-id', data['id']);
        },
        "columns": [{
                "data": "key"
            },
            {
                "data": "name"
            },
            {
                "data": "options"
            },
        ],
        'language': {
            'lengthMenu': '_MENU_ {{ trans('file.records per page') }}',
            "info": '<small>{{ trans('file.Showing') }} _START_ - _END_ (_TOTAL_)</small>',
            "search": '{{ trans('file.Search') }}',
            'paginate': {
                'previous': '<i class="dripicons-chevron-left"></i>',
                'next': '<i class="dripicons-chevron-right"></i>'
            }
        },
        order: [
            ['2', 'asc']
        ],
        'columnDefs': [{
            "orderable": false,
            'targets': [0, 1]
        }],
        'select': {
            style: 'multi',
            selector: 'td:first-child'
        },
        'lengthMenu': [
            [10, 25, 50, -1],
            [10, 25, 50, "All"]
        ],

        dom: '<"row"lfB>rtip',
        buttons: [{
                extend: 'pdf',
                text: '<i title="export to pdf" class="fa fa-file-pdf-o"></i>',
                exportOptions: {
                    columns: ':visible:Not(.not-exported)',
                    rows: ':visible'
                },
                footer: true
            },
            {
                extend: 'excel',
                text: '<i title="export to excel" class="dripicons-document-new"></i>',
                exportOptions: {
                    columns: ':visible:Not(.not-exported)',
                    rows: ':visible'
                },
                footer: true
            },
            {
                extend: 'csv',
                text: '<i title="export to csv" class="fa fa-file-text-o"></i>',
                exportOptions: {
                    columns: ':visible:Not(.not-exported)',
                    rows: ':visible'
                },
                footer: true
            },
            {
                extend: 'print',
                text: '<i title="print" class="fa fa-print"></i>',
                exportOptions: {
                    columns: ':visible:Not(.not-exported)',
                    rows: ':visible'
                },
                footer: true
            },
            {
                text: '<i title="delete" class="dripicons-cross"></i>',
                className: 'buttons-delete',
                action: function(e, dt, node, config) {
                    if (user_verified == '1') {
                        category_id.length = 0;
                        $(':checkbox:checked').each(function(i) {
                            if (i) {
                                category_id[i - 1] = $(this).closest('tr').data('id');
                            }
                        });
                        if (category_id.length && confirm(
                                "If you delete category all products under this category will also be deleted. Are you sure want to delete?"
                            )) {
                            $.ajax({
                                type: 'POST',
                                url: 'category/deletebyselection',
                                data: {
                                    categoryIdArray: category_id
                                },
                                success: function(data) {
                                    dt.rows({
                                        page: 'current',
                                        selected: true
                                    }).deselect();
                                    dt.rows({
                                        page: 'current',
                                        selected: true
                                    }).remove().draw(false);
                                }
                            });
                        } else if (!category_id.length)
                            alert('No category is selected!');
                    } else
                        alert('This feature is disable for demo!');
                }
            },
            {
                extend: 'colvis',
                text: '<i title="column visibility" class="fa fa-eye"></i>',
                columns: ':gt(0)'
            },
        ],
    });
           }
   
});


    </script>
@endpush
